jsLoad("Code ", "testModels", "get_help← { 1↓ \"\ntestModels:\n   Matrix       Debugged Roger Hui's APL, released in prelude\n   Take         modeled with scalar right arguments, released in Javascript\n   Transpose    modeled left argument, released in Javascript\n   Disclose     wrote extention to support any rank, released in prelude\n\n   Enclose      supports left argument, only in my prelude\n   Grade        supports full left argument, only in my prelude\n   Thorn        supports left argument, only in my prelude\n   Axis         ⍭ applies variant of ↑, ↓, ⊂, only in my prelude\n   Pivot        support full left argument, Axis via ⍭, only in my prelude\n   Test         all of the above\"\n}\n\nget_Test← {\n ⍝ To test APL Models:  \n X←{⎕← '' ⋄ ⎕← ''⍎ ⎕← '   ', ⍵}\n X \"Matrix      ⍝ Debugged Roger Hui's APL, released in prelude\"             \n X 'Take        ⍝ modeled with scalar right arguments, released in Javascript' \n X 'Transpose   ⍝ modeled left argument, released in Javascript'               \n X 'Disclose    ⍝ wrote extention to support any rank, released in prelude'    \n X 'Enclose     ⍝ supports left argument, only in my prelude'                  \n X 'Grade       ⍝ supports full left argument, only in my prelude'             \n X 'Thorn       ⍝ supports left argument, only in my prelude'                  \n X 'Axis        ⍝ ⍭ applies variant of ↑, ↓, ⊂, only in my prelude'        \n X 'Pivot       ⍝ support full left argument, Axis via ⍭, only in my prelude'\n ''\n}\n\nget_Matrix← {\n ⍝ Matrix Divide\n y← 4 4⍴ ( \n   12  1 4 10\n   ¯6 ¯5 4  7\n   ¯4  9 3  4\n   ¯2 ¯6 7  7)\n x← 93 81 93.5 120.5\n 0 2⍕ x ⌹ y\n}\n\nget_Take← {\n ⎕← 'Simple' (3 3 ↑ 2) (3 3 ↑ 2 2⍴⍳4)\n ⎕← 'Nested' (3 3 ↑ ⊂2 3) (3 3 ↑ ⍳2 2)\n 'Done'\n}\n\nget_Transpose← {\n ⍝ Transpose simple\n d← 2 3 4⍴⍳24\n a← 0 2 1 ⍉ b← 0 2 1 ⍉ d \n ⎕← 'Simple' ((⍉d)≡ 2 1 0 ⍉ d) (a≡ d)\n ⍝ Transpose nested\n d← ⍳2 3 4\n a← 0 2 1 ⍉ b← 0 2 1 ⍉ d \n ⎕← 'Nested' ((⍉b)≡ 2 1 0 ⍉ b) (a≡ d)\n 'Done'\n}\n\n⍮← {⍺ ⍵}\n\nget_Disclose← {\n ⍝ Disclose simple\n ⎕← 'Simple' ⍮ ⊃ 2 3⍴(2 3⍴⍳6) 6 (7+3 3⍴⍳9) (16 17) (25+ 2 1⍴⍳2) \n ⍝ Disclose nested\n ⎕← 'Nested' ⍮ ⊃ 2 3⍴(⍳2 3) 6 (7+⍳3 3) (16 17) (25+ ⍳2 1) \n 'Done'\n}\n\nget_Enclose← {\n ⍝ Dyadic Enclose\n Split← {\n  ⍝ Split ⍺ into strings at each ⍵\n  (⍺≠ ⍵) ⊂ ⍺\n }\n Join← {\n  ⍝ Join ⍺ strings into one with ⍵ between each\n  ¯1↓ ∊⍺,¨ ⍵\n }\n ⎕← test← 'this is a quick test'\n expected← 'this' 'is' (,'a') 'quick' 'test'\n (⎕← now← test Split ' ')≢ expected : ↗'Split failed'\n test ≢ now Join ' ' : ↗'Join failed'\n\n ⎕← testBlanks← '   this  is   a quick  test     '\n (⎕← now← testBlanks Split ' ')≢ expected : ↗'Split failed'\n test ≢ now Join ' ' : ↗'Join failed'\n 'Done'\n}\n\nget_Grade← {\n sort← 10 26↑⎕UCS 97 65∘.+⍳26\n sort← (10↑⎕UCS 32 160),\"0123456789\",sort,10↑\"-,;:.!?\"\n\n a← 'paul lee jackson' \n names← 'L23' 'L3' 'L11' 'L10' 'L12' 'L13' 'L2' 'L22' 'L1' 'L21' 'L100'\n words← 'fun' 'Dr' 'funny' 'dr' 'drive' 'Drive' 'DR'\n\n 4 8 1 10 11 6 7 9 12 3 5 15 14 0 13 2≢ ⎕← ⍋ a : ↗'⍋ a'\n 2 13 0 14 15 3 5 12 9 6 7 11 1 10 4 8≢ ⎕← ⍒ a : ↗'⍒ a'\n\n 8 6 1 3 2 4 5 9 7 0 10 ≢ ⎕← sort ⍋ names : ↗'⍋ names'\n 10 0 7 9 5 4 2 3 1 6 8 ≢ ⎕← sort ⍒ names : ↗'⍒ names'\n\n 3 1 6 4 5 0 2 ≢ ⎕← sort ⍋ words : ↗'⍋ words'\n 2 0 5 4 6 1 3 ≢ ⎕← sort ⍒ words : ↗'⍒ words'\n 'Done'\n}\n\nget_Thorn← {\n x← 2 3⍴⍳6 ⋄ x[0;0]←3.1 ⋄ x[0;1]←42 ⋄ x[1;2]←123.45\n ⎕← 7 2 5 0 7 1⍕'Barbara' 'Paul' 'Robert'⍪x\n a← 7 2 8 3 9 4 ⍕ ¯12+2 2 2 3⍴ ⍳24\n b←0 0 8 3⍕ (⍳11), ⍪.001× ?11⍴ 999999\n c← 0 10 0 ¯5⍕c,c←⍪(21⍴¯1 1)× 7× 10* ¯10+ ⍳21\n a b c\n}\n\nget_Axis← {\n X←{⎕← ''⍎ ⎕← '   ', ⍵}\n X '2↑ x←3 4⍴ ⍳12'\n X '2↑⍭{¯1} x'\n\n X '1↓ x'\n X '1↓⍭{¯1} x'\n\n X 'y← 1 1 0 1 1 ⊂ x← 4 5⍴⍳20'\n X 'y≡ 1 1 0 1 1 ⊂⍭{1} x'\n X '1 1 0 1 ⊂⍭{0}x'\n 'Done'\n}\n\nget_Pivot← {\n ⍝ Pivot simple\n b← 2 3 4⍴⍳24\n ⎕← 'Simple' (b≡ 0 ⌽ b) (b≡ 0⌽⍭{0} b) (b≡ 0 ⌽⍭{1} b) (b≡ 0 ⌽⍭{2} b)\n ⎕← (1 ⌽⍭{0} b) (1 ⌽⍭{1} b) (1 ⌽⍭{2} b)\n ⍝ Pivot nested\n b← ⍳3 3 3\n ⎕← 'Nested' (b≡ 0 ⌽ b) (b≡ 0 ⌽⍭{0} b) (b≡ 0 ⌽⍭{1} b) (b≡ 0 ⌽⍭{2} b)\n ⎕← (1 ⌽⍭{0} b) 0 (1 ⌽⍭{1} b) 1 (1 ⌽⍭{2} b) 2\n\n b← 2 3 4⍴⍳24\n b0←(⍴b)⍴ (\n12  1 14 15\n 4 17 18  7\n20 21 10 23\n\n 0 13  2  3\n16  5  6 19\n 8  9 22 11)\n\n b1← (⍴b)⍴ (\n 4  9  2  7\n 8  1  6 11\n 0  5 10  3\n\n20 13 18 23\n12 17 22 15\n16 21 14 19)\n\n b2← (⍴b)⍴ (\n 1  2  3  0\n 6  7  4  5\n11  8  9 10\n\n13 14 15 12\n18 19 16 17\n23 20 21 22)\n\n ⎕← 'Full' ⍮ 4 2⍴(\n  b0≡ (3 4⍴1 2 3) ⌽⍭{0} b) 0 (\n  b1≡ (2 4⍴1 2 3) ⌽⍭{1} b) 1 (\n  b2≡ (2 3⍴1 2 3) ⌽⍭{2} b) 2 (\n  b2≡ (2 3⍴1 2 3) ⌽⍭{¯1} b) ¯1\n\n 'Done'\n}\n")