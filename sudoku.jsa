jsLoad("Code ", "sudoku", "#include Html\n\nshow← {Run '1'Table ⍵}               ⍝ Display in boxes\n\ns44 ← 4 4⍴ 0 0 0 0  0 0 2 1  3 0 0 4  0 0 0 0      ⍝ 4×4 Sudoku puzzle\n\nbox← {⍵⌿⍵/⍵ ⍵⍴⍳⍵×⍵}                  ⍝ verb: box numbers\n\nrcb← {(⍳⍵),¨box ↑⍵*÷2}               ⍝ verb: row-col-box numbers\n\ncmap← {⊂⍭{⍳2} 1∊¨ ⍵∘.=⍵}             ⍝ verb: contention map for ⍵-puzzle\n\navl← {(1+ ⍳↑⍴⍵)~ ⍵× ↑⍺⌷cmap rcb ⍴⍵}  ⍝ verb: available plays at ⍺ for state ⍵\n\nat← {⍵+ (⍴⍵)↑ (-1+ ⍶'')↑ ⍺}          ⍝ adverb: ⍺ at ⍶ in ⍵\n\nnxt← {                               ⍝ verb: next states of ⍵ at ⍺\n ⎕←∆← ⍺\n (⍺ avl ⍵){∆} at¨ ⊂⍵\n}\n\nnxtv← {↑,/⍺∘nxt¨ ⍵}                  ⍝ verb: next state vector  \n\nshape← {\n ⎕← 'rho ', ⍴⍵ \n ⎕← 'depth ', ≡⍵ \n ⎕← 'depths ', ≡¨⍵ \n ⍵\n}\n\n⍝ shape 1 0 nxtv 0 1 nxtv 0 0 nxtv ,⊂s44\n\n\"      ⊃nxtv/ (4 2)(1 3)(2 1)(1 2)(1 1)(,⊂s44)           ⍝ 5-level search\n┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐\n│1 2 3 0│1 2 3 0│1 2 4 0│1 2 4 0│1 3 4 0│1 3 4 0│1 3 4 0│2 1 3 0│2 1 3 0│2 1 4 0│2 1 4 0│2 3 4 0│2 3 4 0│2 3 4 0│\n│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│4 0 2 1│\n│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│3 0 0 4│\n│0 1 0 0│0 4 0 0│0 1 0 0│0 4 0 0│0 1 0 0│0 2 0 0│0 4 0 0│0 2 0 0│0 4 0 0│0 2 0 0│0 4 0 0│0 1 0 0│0 2 0 0│0 4 0 0│\n└───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘\"\n\nemt← {(,⍵=0)/,⍳⍴⍵}                 ⍝ verb: empty cell positions in state ⍵\n\nsvec← {⊃nxtv/(emt ⍵),⊂,⊂⍵}         ⍝ verb: solution vector\n\nfmt← {⊂[3 4]1 3 2 4⍉(2/(⍴⍵)*÷2)⍴⍵}   ⍝ pleasing format\n")