jsLoad("Code ", "shop", "#include Html\n\nthisArguments← thisStore← thisNotInit← thisItems← ''\n\nMail← {\n 2≠ ≡⍵ : ↗'DOMAIN ERROR'\n ⍵← ⍵, ⊂''\n ⍝      ⍵← 'you@a.com' 'Regarding' ['cc=them@b.org [&bcc=her@c.net]']\n «sendMail(_w.data[0], _w.data[1], _w.data[2], _a)»\n ⍝      ⍺← 'Your message'\n}\n\nParm← {\n myArg← thisArguments[; 0]⍳ ⊂⍵\n myArg= ≢thisArguments : ''\n ↑thisArguments[myArg; 1]\n}\n\nget_onDefine← {\n thisArguments← Arguments\n thisNotInit← 0= ≢thisStore← Parm 'Store' : ↗'Store is not specified!'\n thisNotInit← 0= ≢⎕file 'shop', thisStore : ↗thisStore, ' is not configured!'\n ∊me\n}\n\nget_onLoad← {\n thisNotInit : ''\n 0= ≢∆← ⎕file 'shop', thisStore, 'Result' : ''\n (myItems myExtras)← ∆ ⎕split ';'\n myItems← myItems ⎕split TAB\n 'myItems' Checks⍨ myItems∊⍨ Values 'myItems'\n 0= ≢myExtras← ⎕trim myExtras : ''\n 'myExtras' Values⍨ ⊂myExtras ⎕replace TAB ', '\n}\n\nget_goClear← {\n 0 Checks 'myItems'\n MT Values 'myExtras'\n}\n\nShop← {\n lin← ⎕file 'shop', ⍵\n (key lin)← {(⎕trim ⍵) ⎕split LF}¨ lin ⎕split ';'\n lin← {⍵ ⎕split ','}¨ lin\n key lin\n}\n\nget_me← {\n btn← 7 Space 'onclick:goClear' Button 'Clear'\n cols← 5\n (key lin)← Shop thisStore\n tab← cols Columns (⊂'myItems') Check¨ lin\n tab← tab⍪ cols Columns (⊂'onclick:goExtra') Button¨ key\n ∆← btn, BR, Table tab\n ∆← ∆, BR, 'myNext' Text 25\n ∆← ∆, 29 Space 'mySave' 'onclick:goSave' Button 'Send ', thisStore, ' List'\n ∆← ∆, BR, 'myExtras' 'readOnly=true' Text 4 42\n ∆← ∆, 7 Space 'onclick:goRemove' Button 'Remove'\n}\n\nget_goExtra← {\n 0= ≢myNext← Next : ''\n myExtras← ↑Values 'myExtras'\n myNext← myNext, (0≠ ⍴myExtras)/', '\n 'myExtras' Values⍨ ⊂((↑Field 'value'), myNext), myExtras\n}\n\nget_Next← {\n myNext← ⎕trim ↑Values 'myNext'\n 0= ≢myNext : ⎕prompt 'Type in an extra value first!'\n ∨/', '∊ myNext : ⎕prompt 'No spaces or commas!'\n MT Values 'myNext'\n myNext\n}\n\nget_goRemove← {\n 0= ≢myNext← Next : ''\n wrap← {' ', ⍵, ','}\n myExtras← wrap ↑Values 'myExtras'\n myExtras← myExtras ⎕replace (wrap myNext) ''\n 'myExtras' Values⍨ ⊂1↓¯1↓ myExtras\n}\n\nget_goSave← {\n 0≠ ≢thisItems : MailItems\n myItems← (Checks 'myItems')/ Values 'myItems'\n myExtras← (⎕trim ↑Values 'myExtras')⎕split ', '\n ((myItems ⎕join TAB), ';', myExtras ⎕join TAB) ⎕file 'shop', thisStore, 'Result'\n myItems← myItems, myExtras\n 0= ⍴myItems : ⎕prompt 'Nothing to send!'\n myItems← 1↓¨ myItems[⍋myItems]\n myItems← myItems ⎕join ', '\n myAddr← Parm 'Addr'\n 0= ⍴myAddr : myItems ⎕prompt 'Addr not specified!  Please copy this to the clipboard:'\n 1 : myItems Mail myAddr thisStore\n # The following is for SMS Text Messages\n myItems← myItems {«splitLines(_a.toString(), _w.data[0])»} 156- ⍴thisStore\n 1= ⍴myItems : (↑myItems) Mail myAddr thisStore\n thisItems← 0 myAddr myItems ⋄ MailItems\n}\n\nget_MailItems← {\n (myIndex myAddr myItems)← thisItems\n myItem← myIndex⊃ myItems\n myLeft← ,⍕(≢myItems)- myIndex← myIndex+ 1\n myItem Mail myAddr (thisStore, myLeft)\n (⊂'Mailing ', myLeft, ' Left')Values 'mySave'\n myIndex< ≢myItems : thisItems[0]← myIndex\n (⊂'Send ', thisStore, ' List')Values 'mySave'\n thisItems← ''\n}\n\n")